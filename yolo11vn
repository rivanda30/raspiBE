import cv2
import time
import numpy as np
import gpiozero
from ultralytics import YOLO

model_pose = YOLO("yolo11n-pose_ncnn_model", task="pose")

cam_source = "usb0"
resW, resH = 640, 480
min_thresh = 0.5
gpio_pin = 26

led = gpiozero.LED(gpio_pin)

if "usb" in cam_source:
    cam_type = "usb"
    cam_idx = int(cam_source[3:])
    cam = cv2.VideoCapture(cam_idx)
    cam.set(3, resW)
    cam.set(4, resH)
    if not cam.isOpened():
        print("Camera failed to open.")
        exit()
else:
    print("Cam source invalid!")
    exit()

consecutive_detections = 0
gpio_state = 0

fps_buffer = []
fps_avg_len = 50

while True:
    t_start = time.perf_counter()

    if cam_type == "usb":
        ret, frame = cam.read()
        if not ret:
            print("Frame capture failed.")
            break
    else:
        frame_bgra = cam.capture_array()
        frame = cv2.cvtColor(np.copy(frame_bgra), cv2.COLOR_BGRA2BGR)

    results = model_pose(frame, verbose=False)
    frame = results[0].plot()

    pose_detected = results and len(results[0].keypoints) > 0

    if pose_detected:
        consecutive_detections += 1
    else:
        consecutive_detections -= 1

    consecutive_detections = max(0, min(consecutive_detections, 10))

    if consecutive_detections >= 8 and gpio_state == 0:
        gpio_state = 1
        led.on()
    elif consecutive_detections <= 0 and gpio_state == 1:
        gpio_state = 0
        led.off()

    if gpio_state == 0:
        cv2.putText(frame, "Light OFF", (20,60), cv2.FONT_HERSHEY_SIMPLEX, .7, (0,0,255), 2)
    else:
        cv2.putText(frame, "Light ON", (20,60), cv2.FONT_HERSHEY_SIMPLEX, .7, (0,255,0), 2)

    t_stop = time.perf_counter()
    frame_rate_calc = 1 / (t_stop - t_start)
    fps_buffer.append(frame_rate_calc)
    if len(fps_buffer) > fps_avg_len:
        fps_buffer.pop(0)
    avg_frame_rate = np.mean(fps_buffer)

    cv2.putText(frame, f'FPS: {avg_frame_rate:.2f}', (20,30), cv2.FONT_HERSHEY_SIMPLEX, .7, (0,255,255), 2)

    cv2.imshow("Dmove", frame)
    key = cv2.waitKey(5)
    if key == ord('q') or key == ord('Q'):
        break

if cam_type == 'usb':
    cam.release()
cv2.destroyAllWindows()
